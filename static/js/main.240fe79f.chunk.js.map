{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/Form.js","App.js","index.js"],"names":["Todo","getClassName","className","props","todo","completed","onClick","this","toggleDone","bind","id","title","onDelete","Component","TodoList","todos","length","map","key","Form","state","onChange","e","setState","target","name","value","onSubmit","preventDefault","addTodo","type","placeholder","App","filter","trim","newTodo","uuid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAEqBA,E,4MAmBnBC,aAAe,WACb,IAAIC,EAAY,OAIhB,OAHI,EAAKC,MAAMC,KAAKC,YAClBH,GAAa,cAERA,G,uDAtBP,OACE,8BACE,uBACEI,QAASC,KAAKJ,MAAMK,WAAWC,KAAKF,KAAMA,KAAKJ,MAAMC,KAAKM,IAC1DR,UAAWK,KAAKN,gBAEfM,KAAKJ,MAAMC,KAAKO,OAEnB,4BACEL,QAASC,KAAKJ,MAAMS,SAASH,KAAKF,KAAMA,KAAKJ,MAAMC,KAAKM,IACxDR,UAAU,YAFZ,U,GAV0BW,aCCbC,E,uKACT,IAAD,OACP,OACE,yBAAKZ,UAAU,SACgB,IAA5BK,KAAKJ,MAAMY,MAAMC,OAChB,yEAEA,GAEF,4BACGT,KAAKJ,MAAMY,MAAME,KAAI,SAACb,GACrB,OACE,wBAAIc,IAAKd,EAAKM,IACZ,kBAAC,EAAD,CACEN,KAAMA,EACNQ,SAAU,EAAKT,MAAMS,SACrBJ,WAAY,EAAKL,MAAMK,uB,GAhBHK,a,OCDjBM,E,4MACnBC,MAAQ,CACNT,MAAO,I,EAmBTU,SAAW,SAACC,GAEV,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAE5CC,SAAW,SAACL,GACVA,EAAEM,iBACF,EAAKzB,MAAM0B,QAAQ,EAAKT,MAAMT,OAC9B,EAAKY,SAAS,CAAEZ,MAAO,M,uDAvBvB,OACE,yBAAKT,UAAU,aACb,0BAAMyB,SAAUpB,KAAKoB,UACnB,2BACEN,SAAUd,KAAKc,SACfS,KAAK,OACLL,KAAM,QACNC,MAAOnB,KAAKa,MAAMT,MAClBD,GAAG,WACHqB,YAAY,sBAEd,2BAAOD,KAAK,SAASpB,GAAG,cAAcgB,MAAM,c,GAhBpBb,aCIbmB,E,4MACnBZ,MAAQ,CACNL,MAAO,CACL,CACEL,GAAI,EACJC,MAAO,SACPN,WAAW,GAEb,CACEK,GAAI,EACJC,MAAO,eACPN,WAAW,GAEb,CACEK,GAAI,EACJC,MAAO,iBACPN,WAAW,GAEb,CACEK,GAAI,EACJC,MAAO,uBACPN,WAAW,K,EAkBjBO,SAAW,SAACF,GAEV,IAAIK,EAAK,YAAO,EAAKK,MAAML,MAAMkB,QAAO,SAAC7B,GAAD,OAAUA,EAAKM,KAAOA,MAE9D,EAAKa,SAAS,CAAER,MAAOA,K,EAEzBP,WAAa,SAACE,GAEZ,IAAIK,EAAK,YACJ,EAAKK,MAAML,MAAME,KAAI,SAACb,GAIvB,OAHIA,EAAKM,KAAOA,IACdN,EAAKC,WAAaD,EAAKC,WAElBD,MAIX,EAAKmB,SAAS,CAAER,MAAOA,K,EAEzBc,QAAU,SAAClB,GAET,GADqBA,EAAMuB,OACT,CAChB,IAAMC,EAAU,CACdzB,GAAI0B,cACJzB,QACAN,WAAW,GAETU,EAAK,sBAAO,EAAKK,MAAML,OAAlB,CAAyBoB,IAClC,EAAKZ,SAAS,CAAER,Y,uDAzClB,OACE,yBAAKb,UAAU,kBACb,0CACA,kBAAC,EAAD,CAAM2B,QAAStB,KAAKsB,UACpB,kBAAC,EAAD,CACEd,MAAOR,KAAKa,MAAML,MAClBH,SAAUL,KAAKK,SACfJ,WAAYD,KAAKC,kB,GAjCMK,aCFjCwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.240fe79f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Todo extends Component {\r\n  render() {\r\n    return (\r\n      <span>\r\n        <p\r\n          onClick={this.props.toggleDone.bind(this, this.props.todo.id)}\r\n          className={this.getClassName()}\r\n        >\r\n          {this.props.todo.title}\r\n        </p>\r\n        <button\r\n          onClick={this.props.onDelete.bind(this, this.props.todo.id)}\r\n          className=\"del-todo\"\r\n        >\r\n          X\r\n        </button>\r\n      </span>\r\n    );\r\n  }\r\n  getClassName = () => {\r\n    let className = \"todo\";\r\n    if (this.props.todo.completed) {\r\n      className += \" todo-done\";\r\n    }\r\n    return className;\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nexport default class TodoList extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"todos\">\r\n        {this.props.todos.length === 0 ? (\r\n          <h3>No todos to show, add a new todo above...</h3>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <ul>\r\n          {this.props.todos.map((todo) => {\r\n            return (\r\n              <li key={todo.id}>\r\n                <Todo\r\n                  todo={todo}\r\n                  onDelete={this.props.onDelete}\r\n                  toggleDone={this.props.toggleDone}\r\n                />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    title: \"\",\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"todo-form\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <input\r\n            onChange={this.onChange}\r\n            type=\"text\"\r\n            name={\"title\"}\r\n            value={this.state.title}\r\n            id=\"add-todo\"\r\n            placeholder=\"Add a new todo...\"\r\n          />\r\n          <input type=\"submit\" id=\"submit-todo\" value=\"Add\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  onChange = (e) => {\r\n    //So that you dont need to set again and again for different fields\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodo(this.state.title);\r\n    this.setState({ title: \"\" });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuid } from \"uuid\";\nimport TodoList from \"./components/TodoList\";\nimport Form from \"./components/Form\";\n\nexport default class App extends Component {\n  state = {\n    todos: [\n      {\n        id: 1,\n        title: \"A todo\",\n        completed: false,\n      },\n      {\n        id: 2,\n        title: \"Another todo\",\n        completed: false,\n      },\n      {\n        id: 3,\n        title: \"Completed todo\",\n        completed: true,\n      },\n      {\n        id: 4,\n        title: \"And yet another todo\",\n        completed: false,\n      },\n    ],\n  };\n  render() {\n    return (\n      <div className=\"main-container\">\n        <h1>To Do List</h1>\n        <Form addTodo={this.addTodo} />\n        <TodoList\n          todos={this.state.todos}\n          onDelete={this.onDelete}\n          toggleDone={this.toggleDone}\n        />\n      </div>\n    );\n  }\n\n  onDelete = (id) => {\n    // console.log(id);\n    let todos = [...this.state.todos.filter((todo) => todo.id !== id)];\n    // console.log(todos);\n    this.setState({ todos: todos });\n  };\n  toggleDone = (id) => {\n    // console.log(id);\n    let todos = [\n      ...this.state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    ];\n    // console.log(todos);\n    this.setState({ todos: todos });\n  };\n  addTodo = (title) => {\n    const isTitleValid = title.trim();\n    if (isTitleValid) {\n      const newTodo = {\n        id: uuid(),\n        title,\n        completed: false,\n      };\n      let todos = [...this.state.todos, newTodo];\n      this.setState({ todos });\n    }\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}